import { VercelRequest, VercelResponse } from '@vercel/node';

export default async function handler(req: VercelRequest, res: VercelResponse) {
  console.log("=== AI Description Generation Called ===");
  console.log("Request method:", req.method);
  console.log("Request body:", req.body);

  // Only allow POST requests
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { prompt } = req.body;

    if (!prompt) {
      console.log("No prompt provided");
      return res.status(400).json({ error: "Prompt is required" });
    }

    const apiKey = process.env.OPENAI_API_KEY;
    console.log("API key status:", apiKey ? "Available" : "Missing");

    if (!apiKey) {
      return res.status(500).json({ error: "OpenAI API key not configured" });
    }

    console.log("Calling OpenAI with prompt length:", prompt.length);

    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`,
      },
      body: JSON.stringify({
        model: "gpt-4",
        messages: [
          {
            role: "user",
            content: prompt,
          },
        ],
        temperature: 0.8,
        max_tokens: 300,
      }),
    });

    console.log("OpenAI response status:", response.status);

    if (!response.ok) {
      const errorBody = await response.text();
      console.error("OpenAI API error:", errorBody);
      return res.status(response.status).json({
        error: "OpenAI API error",
        details: errorBody,
      });
    }

    const data = await response.json();
    const generatedText = data.choices[0]?.message?.content?.trim();

    if (!generatedText) {
      console.log("No text was generated by OpenAI");
      return res.status(500).json({ error: "No text generated" });
    }

    console.log("✅ Successfully generated description");
    res.json({ description: generatedText });
  } catch (error) {
    console.error("❌ Error in generateDescription:", error);
    res.status(500).json({
      error: "Internal server error",
      details: error instanceof Error ? error.message : "Unknown error",
    });
  }
}
